
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  emailVerified: 'emailVerified',
  image: 'image',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  banned: 'banned',
  banReason: 'banReason',
  banExpires: 'banExpires'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  accountId: 'accountId',
  providerId: 'providerId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  accessTokenExpiresAt: 'accessTokenExpiresAt',
  refreshTokenExpiresAt: 'refreshTokenExpiresAt',
  scope: 'scope',
  idToken: 'idToken',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  expiresAt: 'expiresAt',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  impersonatedBy: 'impersonatedBy'
};

exports.Prisma.VerificationScalarFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  value: 'value',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SectionScalarFieldEnum = {
  id: 'id',
  title: 'title',
  metaDescription: 'metaDescription',
  index: 'index',
  imageSquareLink: 'imageSquareLink',
  imageSquarePublicId: 'imageSquarePublicId',
  imageCoverLink: 'imageCoverLink',
  imageCoverPublicId: 'imageCoverPublicId',
  link: 'link',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CourseScalarFieldEnum = {
  id: 'id',
  title: 'title',
  metaTitle: 'metaTitle',
  metaDescription: 'metaDescription',
  index: 'index',
  imageSquareLink: 'imageSquareLink',
  imageSquarePublicId: 'imageSquarePublicId',
  imageCoverLink: 'imageCoverLink',
  imageCoverPublicId: 'imageCoverPublicId',
  description: 'description',
  jobOpportunity: 'jobOpportunity',
  entryRequirement: 'entryRequirement',
  packagingRule: 'packagingRule',
  coreUnits: 'coreUnits',
  electiveUnits: 'electiveUnits',
  link: 'link',
  sectionId: 'sectionId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserReviewScalarFieldEnum = {
  id: 'id',
  purchasedCourseId: 'purchasedCourseId',
  userName: 'userName',
  userImage: 'userImage',
  reviewImage: 'reviewImage',
  reviewText: 'reviewText',
  givenStar: 'givenStar',
  approved: 'approved',
  reviewDate: 'reviewDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ResponseScalarFieldEnum = {
  id: 'id',
  name: 'name',
  phone: 'phone',
  email: 'email',
  message: 'message',
  interest: 'interest',
  createdAt: 'createdAt',
  stage: 'stage'
};

exports.Prisma.EligibilitySubmissionScalarFieldEnum = {
  id: 'id',
  fullName: 'fullName',
  email: 'email',
  phoneNumber: 'phoneNumber',
  industry: 'industry',
  qualification: 'qualification',
  yearsOfExperience: 'yearsOfExperience',
  stateLivedIn: 'stateLivedIn',
  message: 'message',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NoteScalarFieldEnum = {
  id: 'id',
  content: 'content',
  createdAt: 'createdAt',
  responseId: 'responseId',
  eligibilitySubmissionId: 'eligibilitySubmissionId',
  noteType: 'noteType'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  createdAt: 'createdAt',
  type: 'type',
  recipients: 'recipients',
  readBy: 'readBy'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  name: 'name',
  qualification: 'qualification',
  phoneNumber: 'phoneNumber',
  email: 'email',
  source: 'source',
  collegeName: 'collegeName',
  courseFee: 'courseFee',
  paymentStatus: 'paymentStatus',
  payment: 'payment',
  collegePayment: 'collegePayment',
  agentCommission: 'agentCommission',
  bankCommission: 'bankCommission',
  netProfit: 'netProfit',
  enrollmentDate: 'enrollmentDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  additionalNote: 'additionalNote'
};

exports.Prisma.PaymentPartScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  paidAt: 'paidAt',
  paymentId: 'paymentId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  user: 'user',
  admin: 'admin',
  moderator: 'moderator'
};

exports.ResponseStage = exports.$Enums.ResponseStage = {
  LEAD: 'LEAD',
  INTERESTED: 'INTERESTED',
  CONVERTED: 'CONVERTED',
  CANCELLED: 'CANCELLED'
};

exports.NoteType = exports.$Enums.NoteType = {
  RESPONSE: 'RESPONSE',
  ELIGIBILITY: 'ELIGIBILITY'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  response: 'response',
  eligibility: 'eligibility'
};

exports.Prisma.ModelName = {
  User: 'User',
  Account: 'Account',
  Session: 'Session',
  Verification: 'Verification',
  Section: 'Section',
  Course: 'Course',
  UserReview: 'UserReview',
  Response: 'Response',
  EligibilitySubmission: 'EligibilitySubmission',
  Note: 'Note',
  Notification: 'Notification',
  Payment: 'Payment',
  PaymentPart: 'PaymentPart'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\Next js\\rplfasttrack\\app\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\Next js\\rplfasttrack\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../app/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum Role {\n  user\n  admin\n  moderator\n}\n\nmodel User {\n  id            String   @id @default(cuid())\n  name          String\n  email         String   @unique\n  emailVerified Boolean  @default(false)\n  image         String?\n  role          Role     @default(user)\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n\n  banned     Boolean?\n  banReason  String?\n  banExpires DateTime?\n\n  sessions          Session[]\n  accounts          Account[]\n  impersonatedUsers Session[] @relation(\"ImpersonatedSessions\")\n\n  @@index([email])\n}\n\nmodel Account {\n  id                    String    @id @default(cuid())\n  userId                String\n  accountId             String\n  providerId            String\n  accessToken           String?\n  refreshToken          String?\n  accessTokenExpiresAt  DateTime?\n  refreshTokenExpiresAt DateTime?\n  scope                 String?\n  idToken               String?\n  password              String?\n  createdAt             DateTime  @default(now())\n  updatedAt             DateTime  @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([providerId, accountId])\n  @@index([accessToken])\n  @@index([refreshToken])\n}\n\nmodel Session {\n  id        String   @id @default(cuid())\n  userId    String\n  token     String   @unique\n  expiresAt DateTime\n  ipAddress String?\n  userAgent String?\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  impersonatedBy String?\n  impersonator   User?   @relation(\"ImpersonatedSessions\", fields: [impersonatedBy], references: [id])\n\n  @@index([token])\n}\n\nmodel Verification {\n  id         String   @id @default(cuid())\n  identifier String\n  value      String\n  expiresAt  DateTime\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n\n  @@index([identifier])\n}\n\nmodel Section {\n  id                  String   @id @default(cuid())\n  title               String\n  metaDescription     String\n  index               Int\n  imageSquareLink     String\n  imageSquarePublicId String\n  imageCoverLink      String\n  imageCoverPublicId  String\n  link                String   @unique\n  createdAt           DateTime @default(now())\n  updatedAt           DateTime @updatedAt\n  courses             Course[]\n}\n\nmodel Course {\n  id                  String       @id @default(cuid())\n  title               String\n  metaTitle           String       @unique\n  metaDescription     String\n  index               Int\n  imageSquareLink     String\n  imageSquarePublicId String\n  imageCoverLink      String\n  imageCoverPublicId  String\n  description         String\n  jobOpportunity      String\n  entryRequirement    String\n  packagingRule       String\n  coreUnits           String\n  electiveUnits       String\n  link                String       @unique\n  section             Section      @relation(fields: [sectionId], references: [id], onDelete: Cascade)\n  sectionId           String\n  reviews             UserReview[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel UserReview {\n  id                String   @id @default(cuid())\n  purchasedCourse   Course   @relation(fields: [purchasedCourseId], references: [id], onDelete: Cascade)\n  purchasedCourseId String\n  userName          String\n  userImage         String?\n  reviewImage       String?\n  reviewText        String\n  givenStar         Int\n  approved          Boolean  @default(false)\n  reviewDate        DateTime @default(now())\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Response {\n  id        String        @id @default(uuid())\n  name      String\n  phone     String\n  email     String\n  message   String?\n  interest  String?\n  createdAt DateTime      @default(now())\n  stage     ResponseStage @default(LEAD)\n  notes     Note[]\n}\n\nenum ResponseStage {\n  LEAD\n  INTERESTED\n  CONVERTED\n  CANCELLED\n}\n\nmodel EligibilitySubmission {\n  id                String   @id @default(cuid())\n  fullName          String\n  email             String\n  phoneNumber       String\n  industry          String\n  qualification     String\n  yearsOfExperience Int\n  stateLivedIn      String\n  message           String?\n  createdAt         DateTime @default(now())\n  updatedAt         DateTime @updatedAt\n  notes             Note[]\n}\n\nmodel Note {\n  id        String   @id @default(uuid())\n  content   String\n  createdAt DateTime @default(now())\n\n  responseId              String?\n  eligibilitySubmissionId String?\n\n  response              Response?              @relation(fields: [responseId], references: [id], onDelete: Cascade)\n  eligibilitySubmission EligibilitySubmission? @relation(fields: [eligibilitySubmissionId], references: [id], onDelete: Cascade)\n\n  noteType NoteType\n}\n\nenum NoteType {\n  RESPONSE\n  ELIGIBILITY\n}\n\nmodel Notification {\n  id          String           @id @default(uuid())\n  title       String\n  description String\n  createdAt   DateTime         @default(now())\n  type        NotificationType\n  recipients  String[] // Array of User IDs\n  readBy      String[] // Array of User IDs who have read this notification\n}\n\nenum NotificationType {\n  response\n  eligibility\n}\n\nmodel Payment {\n  id              String   @id @default(uuid())\n  name            String\n  qualification   String\n  phoneNumber     String\n  email           String\n  source          String\n  collegeName     String\n  courseFee       Float\n  paymentStatus   String\n  payment         Float    @default(0) // total paid so far\n  collegePayment  Float    @default(0)\n  agentCommission Float    @default(0)\n  bankCommission  Float    @default(0)\n  netProfit       Float    @default(0)\n  enrollmentDate  DateTime @default(now())\n  createdAt       DateTime @default(now())\n  updatedAt       DateTime @updatedAt\n\n  additionalNote String?\n\n  parts PaymentPart[]\n}\n\nmodel PaymentPart {\n  id        String   @id @default(uuid())\n  amount    Float\n  paidAt    DateTime @default(now())\n  paymentId String\n  payment   Payment  @relation(fields: [paymentId], references: [id], onDelete: Cascade)\n}\n",
  "inlineSchemaHash": "da5a10b7a30057ca50e5326197382557ca8952266d896666ec56be3693c6716b",
  "copyEngine": false
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"banned\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"banReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"banExpires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"impersonatedUsers\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"ImpersonatedSessions\"}],\"dbName\":null},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"refreshTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"}],\"dbName\":null},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"},{\"name\":\"impersonatedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"impersonator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ImpersonatedSessions\"}],\"dbName\":null},\"Verification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Section\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metaDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"index\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"imageSquareLink\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageSquarePublicId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageCoverLink\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageCoverPublicId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"link\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"courses\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CourseToSection\"}],\"dbName\":null},\"Course\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metaTitle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metaDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"index\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"imageSquareLink\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageSquarePublicId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageCoverLink\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageCoverPublicId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobOpportunity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entryRequirement\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"packagingRule\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"coreUnits\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"electiveUnits\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"link\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"section\",\"kind\":\"object\",\"type\":\"Section\",\"relationName\":\"CourseToSection\"},{\"name\":\"sectionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"UserReview\",\"relationName\":\"CourseToUserReview\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"UserReview\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"purchasedCourse\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CourseToUserReview\"},{\"name\":\"purchasedCourseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"givenStar\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"approved\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"reviewDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Response\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"interest\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"stage\",\"kind\":\"enum\",\"type\":\"ResponseStage\"},{\"name\":\"notes\",\"kind\":\"object\",\"type\":\"Note\",\"relationName\":\"NoteToResponse\"}],\"dbName\":null},\"EligibilitySubmission\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fullName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"industry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qualification\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"yearsOfExperience\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stateLivedIn\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"object\",\"type\":\"Note\",\"relationName\":\"EligibilitySubmissionToNote\"}],\"dbName\":null},\"Note\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"responseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eligibilitySubmissionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"response\",\"kind\":\"object\",\"type\":\"Response\",\"relationName\":\"NoteToResponse\"},{\"name\":\"eligibilitySubmission\",\"kind\":\"object\",\"type\":\"EligibilitySubmission\",\"relationName\":\"EligibilitySubmissionToNote\"},{\"name\":\"noteType\",\"kind\":\"enum\",\"type\":\"NoteType\"}],\"dbName\":null},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"NotificationType\"},{\"name\":\"recipients\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"readBy\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qualification\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"collegeName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"courseFee\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"paymentStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payment\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"collegePayment\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"agentCommission\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"bankCommission\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"netProfit\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"enrollmentDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"additionalNote\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parts\",\"kind\":\"object\",\"type\":\"PaymentPart\",\"relationName\":\"PaymentToPaymentPart\"}],\"dbName\":null},\"PaymentPart\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"paidAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"paymentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payment\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToPaymentPart\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = undefined
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

